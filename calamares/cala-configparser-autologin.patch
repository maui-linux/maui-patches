From 655b856913066a763690b919b873208f07608316 Mon Sep 17 00:00:00 2001
From: Rohan Garg <rohan@garg.io>
Date: Mon, 31 Oct 2016 16:54:40 +0100
Subject: [PATCH] Use configparser to parse sddm.conf

Since sddm.conf follows the INI format we can use configparser
with a few added options to properly parse the config and write
it out instead of manually parsing each line which is slow and
prone to error.

For eg. The old code would fail to parse a conf which had no
commented out User key but where the user had configured autologin
in Calamares.
---
 src/modules/displaymanager/main.py | 40 ++++++++++++--------------------------
 1 file changed, 12 insertions(+), 28 deletions(-)

Index: calamares-2.4/src/modules/displaymanager/main.py
===================================================================
--- calamares-2.4.orig/src/modules/displaymanager/main.py
+++ calamares-2.4/src/modules/displaymanager/main.py
@@ -24,7 +24,7 @@ import os
 import collections
 import re
 import libcalamares
-
+import configparser
 
 DesktopEnvironment = collections.namedtuple('DesktopEnvironment', ['executable', 'desktop_file'])
 
@@ -252,34 +252,31 @@ def set_autologin(username, displaymanag
         # Systems with Sddm as Desktop Manager
         sddm_conf_path = os.path.join(root_mount_point, "etc/sddm.conf")
 
-        if os.path.isfile(sddm_conf_path):
-            libcalamares.utils.debug('SDDM config file exists')
-        else:
-            libcalamares.utils.check_target_env_call(["sh", "-c", "sddm --example-config > /etc/sddm.conf"])
-
-        text = []
+        sddm_config = configparser.ConfigParser()
+        # Make everything case sensitive
+        sddm_config.optionxform = str
 
-        with open(sddm_conf_path, 'r') as sddm_conf:
-            text = sddm_conf.readlines()
+        if os.path.isfile(sddm_conf_path):
+            sddm_config.read(sddm_conf_path)
 
-        with open(sddm_conf_path, 'w') as sddm_conf:
-            for line in text:
-                # User= line, possibly commented out
-                if re.match('\\s*(?:#\\s*)?User=', line):
-                    if do_autologin:
-                        line = 'User={}\n'.format(username)
-                    else:
-                        line = '#User=\n'
-
-                # Session= line, commented out or with empty value
-                if re.match('\\s*#\\s*Session=|\\s*Session=$', line):
-                    if default_desktop_environment is not None:
-                        if do_autologin:
-                            line = 'Session={}.desktop\n'.format(default_desktop_environment.desktop_file)
-                        else:
-                            line = '#Session={}.desktop\n'.format(default_desktop_environment.desktop_file)
+        autologin_section = {}
+        if 'Autologin' in sddm_config:
+            autologin_section = sddm_config['Autologin']
+
+        if do_autologin:
+            autologin_section['User'] = username
+
+        if default_desktop_environment is not None:
+            autologin_section['Session'] = default_desktop_environment.desktop_file
+
+        if autologin_section:
+            if 'Autologin' in sddm_config:
+                sddm_config['Autologin'].update(autologin_section)
+            else:
+                sddm_config['Autologin'] = autologin_section
 
-                sddm_conf.write(line)
+        with open(sddm_conf_path, 'w') as sddm_config_file:
+            sddm_config.write(sddm_config_file, space_around_delimiters=False)
 
     return None
 
